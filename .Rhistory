setwd("~/Desktop/Programming/The Analytics Edge")
Sys.setlocale("LC_ALL", "C")
CPS = read.csv("CPSData.csv")
str(CPS)
summary(CPS)
sort(table(CPS$Industry))
sort(table(CPS$Region))
min(sort(table(CPS$Region)))
max(sort(table(CPS$Region)))
names
names(CPS)
max(sort(table(CPS$State)))
min(sort(table(CPS$State)))
which.max(sort(table(CPS$State)))
which.min(sort(table(CPS$State)))
table(CPS$Citizenship)
sum(table(CPS$Citizenship))
table(CPS$Citizenship)[1]
table(CPS$Citizenship)[1] / sum(table(CPS$Citizenship))
table(CPS$Citizenship)[1:2] / sum(table(CPS$Citizenship))
sum(table(CPS$Citizenship)[1:2])  / sum(table(CPS$Citizenship))
sum(table(CPS$Citizenship)[1:2]))  / sum(table(CPS$Citizenship)
sum(table(CPS$Citizenship)[1:2])  / sum(table(CPS$Citizenship)
sum(table(CPS$Citizenship)[1:2])  / sum(table(CPS$Citizenship))
sum(table(CPS$Citizenship)[1:2])
names(CPS)
table(CPS$Race, CPS$Hispanic)
table(CPS$Race, CPS$Hispanic > 250)
table(CPS$Race, CPS$Hispanic == 1)
table(CPS$Race, CPS$Hispanic)
?table
summary(CPS)
is.na(CPS$Married)
table(CPS$Regio, is.na(CPS$Married))
table(CPS$Region, is.na(CPS$Married))
table(CPS$Region, CPS$Sex, CPS$Age, CPS$Citizenship, is.na(CPS$Married))
table(CPS$Region, is.na(CPS$Married))
table(CPS$Region, is.na(CPS$Married), CPS$Region/is.na(CPS$Married))
table(CPS$Region, is.na(CPS$Married), CPS$Region/is.na(CPS$Married == 1))
table(CPS$Region, is.na(CPS$Married))
table(CPS$Region, is.na(CPS$Married))[1]
table(CPS$Region, is.na(CPS$Married))[2]
table(CPS$Region, is.na(CPS$Married))[3]
table(CPS$Region, is.na(CPS$Married))[4]
table(CPS$Region, is.na(CPS$Married))[5]
table(CPS$Region, is.na(CPS$Married))[1] / table(CPS$Region, is.na(CPS$Married))[5]
1:5
[1:5]
table(CPS$Sex, is.na(CPS$Married)
)
table(CPS$Age, is.na(CPS$Married))
table(CPS$Citizenship, is.na(CPS$Married))
table(CPS$State, is.na(CPS$MetroAreaCode))
table(CPS$Region, is.na(CPS$MetroAreaCode))
?prop.table
prop.table(table(CPS$Region, is.na(CPS$MetroAreaCode)))
?cbind
library(reshape2)
as.data.frame.matrix(table(CPS$Region, is.na(CPS$MetroAreaCode)))
table(CPS$Region, is.na(CPS$MetroAreaCode))
tapply(CPS$MetroAreaCode,CPS$State,mean)
tapply(is.na(CPS$MetroAreaCode),CPS$State,mean)
sort(tapply(is.na(CPS$MetroAreaCode),CPS$State,mean))
MetroAreaMap = read.csv("MetroAreaCodes.csv")
CountryMap = read.csv("CountryCodes.csv")
str(MetroAreaMap)
str(CountryMap)
nrow(CountryMap)
summary(MetroAreaMap)
summary(CountryMap)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
str(CPS)
is.na(CPS$MetroArea)
table(is.na(CPS$MetroArea))
table(CPS$MetroArea)
sort(table(CPS$MetroArea))
tapply(CPS$Hispanic,CPS$MetroArea,mean)
sort(tapply(CPS$Hispanic,CPS$MetroArea,mean))
sort(tapply(CPS$Race == "Asian",CPS$MetroArea,mean))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, rm.na=TRUE))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, NA.rm=TRUE))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE))[1]
